---
title: "[ESG Centre of Excellence](https://www.esgbc.ca) Dashboard"
execute: 
  echo: false
format:
   dashboard:
     logo: ../02_images/BCID_V_rgb_rev.png
     nav-buttons:
        icon: github
        href: https://github.com/bcgov-c/esg-dashboard
     self-contained: true
     css: ../03_styles/styles.css
---

```{r license}
# Copyright 2024 Province of British Columbia
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and limitations under the License.
```


```{r packages}
#| output: false
library(tidyverse)
library(plotly)
library(scales)
library(janitor)
library(lubridate)
library(crosstalk)
library(htmltools)
```

```{r data}
source("../01_data/data.R")

## crosstalk data
shared_data <- SharedData$new(filter(data, Type == "Line"))

## split crosstalk data for demo3
shared_data1 <- SharedData$new(filter(data, Type == "Line" & Topic == "Energy Use"))
shared_data2 <- SharedData$new(filter(data, Type == "Line" & Topic == "GHG Emissions"))
```

```{r plots}
## for demo1 and demo2
plot <- plot_ly(data = shared_data,
        x = ~Year,
        y = ~Value,
        linetype = ~Topic,
        color = ~Variable,
        type = "scatter",
        mode = "lines+markers",
        text = ~ paste0(Variable, ": ", percent(Value, accuracy = 0.1)),
        textposition = "none",
        hovertemplate = "%{text}<extra>%{x}</extra>") %>%
  layout(yaxis = list(title = "", tickformat = "0%"),
         xaxis = list(title = "", hoverformat = "%Y", tickformat = "%Y"))

## for demo3 and 4 - energy use
plot1 <- plot_ly(data = shared_data1,
        x = ~Year,
        y = ~Value,
        color = ~Variable,
        type = "scatter",
        mode = "lines+markers",
        text = ~ paste0(Variable, ": ", percent(Value, accuracy = 0.1)),
        textposition = "none",
        hovertemplate = "%{text}<extra>%{x}</extra>") %>%
  layout(yaxis = list(title = "", tickformat = "0%"),
         xaxis = list(title = "", hoverformat = "%Y", tickformat = "%Y"))

## for demo3 and 4 - ghg emissions
plot2 <- plot_ly(data = shared_data2,
        x = ~Year,
        y = ~Value,
        color = ~Variable,
        type = "scatter",
        mode = "lines+markers",
        text = ~ paste0(Variable, ": ", percent(Value, accuracy = 0.1)),
        textposition = "none",
        hovertemplate = "%{text}<extra>%{x}</extra>") %>%
  layout(yaxis = list(title = "", tickformat = "0%"),
         xaxis = list(title = "", hoverformat = "%Y", tickformat = "%Y"))
```

# Demo1

Using filter_select and filter_slider in a separate card from the plot. It would be nice to have a default filter_select value so that all lines are not plotted at the same time.

## Row {height="20%"}
```{r}
#| layout-ncol: 2

div(
  id = "selectdiv",
  filter_select("topic", "Select Chart Topic:", shared_data, ~Topic, multiple = FALSE)
)

div(
  id = "sliderdiv",
  style = "padding-left: 10px",
  filter_slider("year", "Adjust Chart Years:", shared_data, ~Year, step = 1, ticks = FALSE, width="90%")
)
```

## Row {height="70%"}
```{r}
#| warning: false
#| title: Energy Use by Fuel Source (%)
plot
```

# Demo2

Using filter_select and filter_slider in a card toolbar. The width of the filter_select shrinks to the width of the label and if there is no label the dropdown is very thin. When clicking on a list item in the filter_select dropdown, it registers as a click on the plotly legend behind it as well. Note the toolbar does not shrink when adjusting screen size.

```{r}
#| content: card-toolbar

htmltools::div(
  id = "selectdiv1",
  filter_select("topic", "", shared_data, ~Topic, multiple = FALSE)
)

htmltools::div(
  id = "selectdiv2",
  filter_select("topic", "Select Chart Topic:", shared_data, ~Topic, multiple = FALSE)
)

htmltools::div(
  id = "sliderdiv",
  style = "padding-left: 10px",
  filter_slider("year", "Adjust Chart Years:", shared_data, ~Year, step = 1, ticks = FALSE)
)
```

## Row {height = "80%"}
```{r}
#| warning: false
#| title: Energy Use by Fuel Source (%)
plot
```

# Demo3

Using a tabset with filter_slider in the toolbar - so that each chart topic is plotted separately. The card-toolbar is formatted differently. It is appended to the plot but has the formatting of a normal card. First tab has the default formatting. The width is adjusted in the second tab. The toolbar shrinks when changing the screen size.

### Row {.tabset height="80%"}

::: {.card title="Energy Use by Fuel Source (%)"}
```{r}
#| content: card-toolbar

htmltools::div(
  id = "sliderdiv",
  style = "padding-left: 10px",
  filter_slider("year", "Adjust Chart Years:", shared_data1, ~Year, step = 1, ticks = FALSE)
)
```

```{r}
#| warning: false
plot1
```
:::

:::{.card title="GHG Emissions by Fuel Source (%)"}
```{r}
#| content: card-toolbar

htmltools::div(
  id = "sliderdiv",
  style = "padding-left: 10px",
  filter_slider("year", "Adjust Chart Years:", shared_data2, ~Year, step = 1, ticks = FALSE, width = "15%")
)
```

```{r}
#| warning: false
plot2
```
:::


# Demo4

Attempt at formatting the filter_slider so that the label and slider are inline. The only thing I found that worked was using a table which is not optimal. The table formatting also required additional css code to remove the top and bottom borders (no bordres first tab, default in second tab). Still don't know how to right-align the slider.

```{css}
table.caption-top.table.toolbartable {
    border: none;
    margin: 0;
}
```


### Row {.tabset height="80%"}

::: {.card title="Energy Use by Fuel Source (%)"}
```{r}
#| content: card-toolbar

htmltools::div(style = "width:35%",
htmltools::tags$table(class="toolbartable",
                  tags$colgroup(
                    tags$col(style = "width:35%"),
                    tags$col(style = "width:65%")
                  ),
                  
  htmltools::tags$tr(
    htmltools::tags$td(style = "padding-top:22px;padding-bottom:0;border:none", "Adjust Chart Years:"),
    htmltools::tags$td(style = "border:none;padding-bottom:0;", 
                       filter_slider("year", "", shared_data1, ~Year,
                                     step = 1, ticks = FALSE, width = "100%"))
  )
))
```

```{r}
#| warning: false
plot1
```
:::

:::{.card title="GHG Emissions by Fuel Source (%)"}
```{r}
#| content: card-toolbar

htmltools::div(style = "width:35%",
htmltools::tags$table(
                  tags$colgroup(
                    tags$col(style = "width:35%"),
                    tags$col(style = "width:65%")
                  ),
                  
  htmltools::tags$tr(
    htmltools::tags$td(style = "padding-top:22px;padding-bottom:0;border:none", "Adjust Chart Years:"),
    htmltools::tags$td(style = "border:none;padding-bottom:0;", 
                       filter_slider("year", "", shared_data2, ~Year,
                                     step = 1, ticks = FALSE, width = "100%"))
  )
))
```

```{r}
#| warning: false
plot2
```
:::
